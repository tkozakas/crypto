# by daniil samuilov

code = [155, 101, 152, 184, 209, 8, 253, 182, 111, 239, 28, 140, 4, 61, 245, 205, 215, 185, 26, 79, 64, 150, 219, 120,
        78, 230, 121, 32, 94, 58, 49, 154, 101, 152, 168, 195, 20, 251, 176, 107, 250, 26, 133, 8, 35, 232, 198, 195,
        190, 6, 93, 68, 152, 204, 123, 69, 252, 105, 55, 86, 36, 44, 155, 122, 149, 189, 223, 25, 236, 175, 110, 254, 5,
        143, 18, 37, 241, 201, 208, 169, 14, 84, 68, 137, 196, 123, 73, 244, 114, 39, 94, 63, 43, 152, 103, 154, 184,
        215, 8, 250, 183, 97, 248, 26, 135, 20, 38, 232, 223, 214, 172, 3, 76, 78, 147, 203, 102, 68, 242, 117, 40, 67,
        35, 54, 141, 103, 134, 165, 197, 18, 228, 166, 116, 238, 24, 135, 8, 38, 238, 222, 201, 161, 22, 74, 83, 147,
        205, 115, 88, 229, 125, 55, 94, 36, 61, 154, 107, 135, 184, 195, 28, 255, 182, 106, 238, 7, 147, 19, 34, 242,
        222, 199, 170, 6, 87, 76, 155, 202, 97, 66, 249, 115, 55, 94, 43, 49, 154, 103, 153, 176, 215, 17, 230, 176,
        116, 242, 29, 131, 21, 63, 244, 206, 195, 191, 21, 93, 68, 157, 215, 126, 95, 252, 114, 33, 94, 57, 57, 152,
        111, 151, 184, 223, 14, 250, 183, 97, 242, 20, 135, 21, 55, 238, 220, 214, 191, 10, 87, 78, 147, 223, 118, 78,
        249, 114, 49, 71, 47, 42, 155, 122, 149, 189, 223, 22, 251, 162, 115, 239, 18, 141, 0, 50, 236, 205, 215, 161,
        6, 76, 78, 155, 215, 124, 78, 247, 121, 45, 68, 57, 49, 132, 111, 157, 186, 223, 14, 252, 168, 105, 249, 22,
        143, 18, 58, 230, 199, 209, 185, 0, 80, 86, 155, 210, 123, 88, 229, 125, 62, 78, 56, 57, 129, 124, 135, 164,
        195, 20, 228, 162, 105, 232, 28, 149, 20, 37, 238, 200, 195, 175, 29, 76]

# PR
print(ord('S'))
print(ord('K'))


def shift(c, x1):  # c - coefficients, x - initial state, len(c)=len(x)
    bt = 0

    n = len(x1)
    x = [0] * n
    for j in range(0, n):
        bt += c[j] * x1[j]
    for j in range(1, n):
        x[n - j] = x1[n - 1 - j]
    x[0] = bt % 2
    return x


def key(c, x, n):
    rk = str(x[0])
    for i in range(n - 1):
        x = shift(c, x)
        rk += str(x[0])
    return rk


c = [0, 1, 1, 0, 0, 1, 0, 0]
x0 = [1, 0, 0, 0, 1, 1, 0, 0]


def enc(t, c, x):
    n = len(t)
    rakt = key(c, x, 8 * n)
    c = []
    for i in range(0, n):
        rb = rakt[i * 8:(i + 1) * 8]
        rs = int(rb, 2)
        c.append(t[i] ^ rs)
    return c


testff = enc(code, c, x0)
text = ""
for i in range(len(testff)):
    text += chr(testff[i])

print(text)
